name: Terraform Apply to GCP

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

env:
  TF_WORKING_DIR: 'terraform'
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_region: us-west1

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Import if exists
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          # Import VPC if present
          RESOURCE_VPC="module.network.google_compute_network.vpc"
          REMOTE_VPC="projects/${{ env.TF_VAR_project_id }}/global/networks/wiz-vpc"
          if gcloud compute networks describe wiz-vpc --project=${{ env.TF_VAR_project_id }} > /dev/null 2>&1 && \
             ! terraform state list | grep -q "^${RESOURCE_VPC}$"; then
            echo "Importing existing VPC into Terraform state..."
            terraform import ${RESOURCE_VPC} ${REMOTE_VPC}
          fi

          # Import Subnet if present
          RESOURCE_SUBNET="module.network.google_compute_subnetwork.subnet"
          REMOTE_SUBNET="projects/${{ env.TF_VAR_project_id }}/regions/${{ env.TF_VAR_region }}/subnetworks/wiz-vpc-subnet"
          if gcloud compute networks subnets describe wiz-vpc-subnet --project=${{ env.TF_VAR_project_id }} --region=${{ env.TF_VAR_region }} > /dev/null 2>&1 && \
             ! terraform state list | grep -q "^${RESOURCE_SUBNET}$"; then
            echo "Importing existing Subnet into Terraform state..."
            terraform import ${RESOURCE_SUBNET} ${REMOTE_SUBNET}
          fi

          # Import GKE cluster if present
          RESOURCE_GKE="module.gke.google_container_cluster.primary"
          REMOTE_GKE="projects/${{ env.TF_VAR_project_id }}/locations/${{ env.TF_VAR_region }}/clusters/wiz-cluster"
          if gcloud container clusters describe wiz-cluster --project=${{ env.TF_VAR_project_id }} --region=${{ env.TF_VAR_region }} > /dev/null 2>&1 && \
             ! terraform state list | grep -q "^${RESOURCE_GKE}$"; then
            echo "Importing existing GKE cluster into Terraform state..."
            terraform import ${RESOURCE_GKE} ${REMOTE_GKE}
          fi

          # Import GKE node pool if present
          RESOURCE_NODEPOOL="module.gke.google_container_node_pool.default"
          REMOTE_NODEPOOL="projects/${{ env.TF_VAR_project_id }}/locations/${{ env.TF_VAR_region }}/clusters/wiz-cluster/nodePools/wiz-cluster-pool"
          if gcloud container node-pools list --cluster=wiz-cluster --region=${{ env.TF_VAR_region }} --project=${{ env.TF_VAR_project_id }} --format="value(name)" | grep -q "^wiz-cluster-pool$" && \
             ! terraform state list | grep -q "^${RESOURCE_NODEPOOL}$"; then
            echo "Importing existing GKE node pool into Terraform state..."
            terraform import ${RESOURCE_NODEPOOL} ${REMOTE_NODEPOOL}
          fi

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=plan.tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve plan.tfplan
